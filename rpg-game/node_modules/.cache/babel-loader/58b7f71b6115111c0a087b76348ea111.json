{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { mapSpots } from '../data/mapSpots';\nexport const useCharacter = propName => {\n  _s();\n\n  const [name, setName] = useState(propName);\n  const [pos, setPos] = useState({\n    x: 3,\n    y: 5\n  });\n  const [side, setSide] = useState('down');\n\n  const moveLeft = () => {\n    setPos(pos => ({\n      x: canMove(pos.x - 1, pos.y) ? pos.x - 1 : pos.x,\n      y: pos.y\n    }));\n    setSide('left');\n  };\n\n  const moveRight = () => {\n    setPos(pos => ({\n      x: canMove(pos.x + 1, pos.y) ? pos.x + 1 : pos.x,\n      y: pos.y\n    }));\n    setSide('right');\n  };\n\n  const moveDown = () => {\n    setPos(pos => ({\n      x: pos.x,\n      y: canMove(pos.x, pos.y + 1) ? pos.y + 1 : pos.y\n    }));\n    setSide('down');\n  };\n\n  const moveUp = () => {\n    setPos(pos => ({\n      x: pos.x,\n      y: canMove(pos.x, pos.y - 1) ? pos.y - 1 : pos.y\n    }));\n    setSide('up');\n  };\n\n  const canMove = (x, y) => {\n    if (mapSpots[y] !== undefined && mapSpots[y][x] !== undefined) {\n      return mapSpots[y][x] === 1;\n    }\n\n    return false;\n  };\n\n  return {\n    name,\n    x: pos.x,\n    y: pos.y,\n    side,\n    moveLeft,\n    moveRight,\n    moveDown,\n    moveUp\n  };\n};\n\n_s(useCharacter, \"LUy+iwE94t4A5ZflZC2iJGfEf/Q=\");","map":{"version":3,"sources":["D:/Documentos/Projetos/GitHub/rpg-with-react/rpg-game/src/hooks/useCharacter.ts"],"names":["useState","mapSpots","useCharacter","propName","name","setName","pos","setPos","x","y","side","setSide","moveLeft","canMove","moveRight","moveDown","moveUp","undefined"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { CharacterSides } from '../types/CharacterSides';\nimport { mapSpots } from '../data/mapSpots';\n\nexport const useCharacter = (propName: string) => {\n    const [name, setName] = useState(propName);\n    const [pos, setPos] = useState({ x: 3, y: 5 });\n    const [side, setSide] = useState<CharacterSides>('down');\n\n    const moveLeft = () => {\n        setPos(pos => ({\n            x: canMove(pos.x - 1, pos.y) ? pos.x - 1 : pos.x,\n            y: pos.y\n        }));\n        setSide('left');\n    }\n    const moveRight = () => {\n        setPos(pos => ({\n            x: canMove(pos.x + 1, pos.y) ? pos.x + 1 : pos.x,\n            y: pos.y\n        }));\n        setSide('right');\n    }\n    const moveDown = () => {\n        setPos(pos => ({\n            x: pos.x,\n            y: canMove(pos.x, pos.y + 1) ? pos.y + 1 : pos.y\n        }));\n        setSide('down');\n    }\n    const moveUp = () => {\n        setPos(pos => ({\n            x: pos.x,\n            y: canMove(pos.x, pos.y - 1) ? pos.y - 1 : pos.y\n        }));\n        setSide('up');\n    }\n\n    const canMove = (x: number, y: number) => {\n        if(mapSpots[y] !== undefined && mapSpots[y][x] !== undefined) {\n            return (mapSpots[y][x] === 1);\n        }\n        return false;\n    }\n\n    return {\n        name,\n        x: pos.x,\n        y: pos.y,\n        side,\n        moveLeft,\n        moveRight,\n        moveDown,\n        moveUp\n    };\n}"]},"metadata":{},"sourceType":"module"}